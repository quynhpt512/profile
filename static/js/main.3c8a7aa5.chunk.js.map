{"version":3,"sources":["App.js","serviceWorker.js","index.js","images/avata.png"],"names":["App","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","src","avata","alt","name","nickname","email","href","Component","defaultProps","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"4MAIMA,qBACF,SAAAA,EAAYC,GAAQ,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KACVH,0EAGN,OACIO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,0BAGRF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAOC,IAAI,UAEzBN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,iBAAQF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaP,KAAKH,MAAMc,OAChDP,EAAAC,EAAAC,cAAA,qBAAYF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,OAAZ,iBACAH,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,6BAA6BN,KAAKH,MAAMe,SAASR,EAAAC,EAAAC,cAAA,WACjDF,EAAAC,EAAAC,cAAA,yBAAyBN,KAAKH,MAAMgB,SAIhDT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,oHACAF,EAAAC,EAAAC,cAAA,wGACAF,EAAAC,EAAAC,cAAA,uFAEJF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,2CAIZF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,sDACAF,EAAAC,EAAAC,cAAA,8BAAqBF,EAAAC,EAAAC,cAAA,KAAGQ,KAAK,KAAKd,KAAKH,MAAMe,qBA9CnDG,cAsDlBnB,EAAIoB,aAAe,CACfL,KAAM,aACNC,SAAU,OACVC,MAAO,0BAGIjB,QCpDKqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOnB,EAAAC,EAAAC,cAACkB,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.3c8a7aa5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport avata from './images/avata.png';\nimport './App.css';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\"> \n                    <div className=\"main\">                   \n                        <h1>Who I am ?</h1>\n                    </div>                   \n                </header>\n                <div className=\"App-content\">\n                    <div className=\"profile\">\n                        <div className=\"avata\">\n                            <img src={avata} alt=\"logo\" />\n                        </div>\n                        <div className=\"profile-intro\">\n                            <h2>I'M <span className=\"text-name\">{this.props.name}</span></h2>\n                            <h3>GRAPHIC <span className=\"text-name\">AND</span> WEB TEMPLATE</h3>\n                            <p>\n                                <strong>Nick name: </strong>{this.props.nickname}<br />\n                                <strong>Email: </strong>{this.props.email}\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"description\">\n                        <h2>Personal qualities</h2>\n                        <ul>\n                            <li>As planned, said work arrangements, active, enthusiastic, innovative, passionate and very sociable job</li>\n                            <li>As a hardworking, inquisitive, want to learn new technology. Absorb and adapt to rapid job</li>\n                            <li>Ability to work independently and in groups, to withstand high pressure.</li>\n                        </ul>\n                        <h2>Skills</h2>\n                        <ul>\n                            <li>PHP programming</li>\n                            <li>CSS design</li>\n                            <li>Development open sources</li>\n                            <li>Independent or team work</li>\n                            <li>Experienced Web Responsive</li>\n                        </ul>\n                    </div>\n                </div>\n                <footer className=\"App-footer\">\n                    <div className=\"main\">\n                        <p>Copyright Â© 2019. All rights reserved.</p>\n                        <p>Made with love by <a href=\"#\">{this.props.nickname}</a></p>\n                    </div>\n                </footer>\n            </div>\n        );\n    }\n}\n\nApp.defaultProps = {\n    name: 'Quynh Pham',\n    nickname: 'Lyly',\n    email: 'quynh.p@shopstack.asia'\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/avata.f550f41b.png\";"],"sourceRoot":""}